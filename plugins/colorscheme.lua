local base30 = {
  white = "#abb2bf",
  darker_black = "#1b1f27",
  black = "#1e222a", --  nvim bg
  black2 = "#252931",
  one_bg = "#282c34", -- real bg of onedark
  one_bg2 = "#353b45",
  one_bg3 = "#373b43",
  grey = "#42464e",
  grey_fg = "#565c64",
  grey_fg2 = "#6f737b",
  light_grey = "#6f737b",
  red = "#e06c75",
  baby_pink = "#DE8C92",
  pink = "#ff75a0",
  line = "#31353d", -- for lines like vertsplit
  green = "#98c379",
  vibrant_green = "#7eca9c",
  nord_blue = "#81A1C1",
  blue = "#61afef",
  yellow = "#e7c787",
  sun = "#EBCB8B",
  purple = "#de98fd",
  dark_purple = "#c882e7",
  teal = "#519ABA",
  orange = "#fca2aa",
  cyan = "#a3b8ef",
  statusline_bg = "#22262e",
  lightbg = "#2d3139",
  pmenu_bg = "#61afef",
  folder_bg = "#61afef",
}

local theme = {
  dark_blue_grey = "#1e222a",
  blue_grey1 = "#353b45",
  blue_grey2 = "#3e4451",
  grey1 = "#545862",
  grey2 = "#565c64",
  white = "#abb2bf",
  base06 = "#b6bdca",
  base07 = "#c8ccd4",
  red = "#e06c75",
  orange = "#d19a66",
  yellow = "#e5c07b",
  green = "#98c379",
  cyan = "#56b6c2",
  blue = "#61afef",
  purple = "#c678dd",
  maroon = "#be5046",
}

return {
  {
    "navarasu/onedark.nvim",
    opts = {
      style = "darker",
      colors = {},
      highlights = {
        ------------------------------ syntax ------------------------------

        Boolean = { fg = theme.orange },
        Character = { fg = theme.red },
        Conditional = { fg = theme.purple },
        Constant = { fg = theme.red },
        Define = { fg = theme.purple, sp = "none" },
        Delimiter = { fg = theme.maroon },
        Float = { fg = theme.orange },
        Variable = { fg = theme.white },
        Function = { fg = theme.blue },
        Identifier = { fg = theme.red, sp = "none" },
        Include = { fg = theme.blue },
        Keyword = { fg = theme.purple },
        Label = { fg = theme.yellow },
        Number = { fg = theme.orange },
        Operator = { fg = theme.white, sp = "none" },
        PreProc = { fg = theme.yellow },
        Repeat = { fg = theme.yellow },
        Special = { fg = theme.cyan },
        SpecialChar = { fg = theme.maroon },
        Statement = { fg = theme.red },
        Macro = { fg = theme.red },
        StorageClass = { fg = theme.yellow },
        String = { fg = theme.green },
        Structure = { fg = theme.purple },
        Tag = { fg = theme.yellow },
        Todo = { fg = theme.yellow, bg = theme.blue_grey1 },
        Type = { fg = theme.yellow, sp = "none" },
        Typedef = { fg = theme.yellow },

        -- Added = { fg = theme.green },
        -- Changed = { fg = theme.cyan },
        -- Removed = { fg = theme.orange },

        ------------------------------ treeesitter ------------------------------

        ["@variable"] = { fg = theme.white },
        ["@variable.builtin"] = { fg = theme.orange },
        ["@variable.parameter"] = { fg = theme.red },
        -- ["@variable.member"] = { fg = theme.red },
        ["@variable.member.key"] = { fg = theme.red },

        ["@module"] = { fg = theme.red },
        ["@module.builtin"] = { fg = theme.red },

        ["@constant"] = { fg = theme.red },
        ["@constant.builtin"] = { fg = theme.orange },
        ["@constant.macro"] = { fg = theme.red },

        ["@string"] = { fg = theme.green },
        ["@string.regex"] = { fg = theme.cyan },
        ["@string.escape"] = { fg = theme.cyan },
        ["@character"] = { fg = theme.red },
        ["@character.special"] = { fg = theme.red },
        ["@number"] = { fg = theme.orange },
        ["@number.float"] = { fg = theme.orange },

        ["@annotation"] = { fg = theme.maroon },
        ["@attribute"] = { fg = theme.yellow },
        ["@error"] = { fg = theme.red },

        ["@keyword.exception"] = { fg = theme.red },
        ["@keyword"] = { fg = theme.purple },
        ["@keyword.function"] = { fg = theme.purple },
        ["@keyword.return"] = { fg = theme.purple },
        ["@keyword.operator"] = { fg = theme.purple },
        ["@keyword.import"] = { fg = theme.blue },
        ["@keyword.conditional"] = { fg = theme.purple },
        ["@keyword.conditional.ternary"] = { fg = theme.purple },
        ["@keyword.repeat"] = { fg = theme.yellow },
        ["@keyword.storage"] = { fg = theme.yellow },
        ["@keyword.directive.define"] = { fg = theme.purple },
        ["@keyword.directive"] = { fg = theme.yellow },

        ["@function"] = { fg = theme.blue },
        ["@function.builtin"] = { fg = theme.blue },
        ["@function.macro"] = { fg = theme.red },
        ["@function.call"] = { fg = theme.blue },
        ["@function.method"] = { fg = theme.blue },
        ["@function.method.call"] = { fg = theme.blue },
        ["@constructor"] = { fg = theme.cyan },

        ["@operator"] = { fg = theme.white },
        ["@reference"] = { fg = theme.white },
        ["@punctuation.bracket"] = { fg = theme.maroon },
        ["@punctuation.delimiter"] = { fg = theme.maroon },
        ["@symbol"] = { fg = theme.green },
        ["@tag"] = { fg = theme.yellow },
        ["@tag.attribute"] = { fg = theme.red },
        ["@tag.delimiter"] = { fg = theme.maroon },
        ["@text"] = { fg = theme.white },
        ["@text.emphasis"] = { fg = theme.orange },
        ["@text.strike"] = { fg = theme.maroon, strikethrough = true },
        ["@type.builtin"] = { fg = theme.yellow },
        ["@definition"] = { sp = theme.grey2, underline = true },
        ["@property"] = { fg = theme.red },

        -- markup
        ["@markup.heading"] = { fg = theme.blue },
        ["@markup.raw"] = { fg = theme.orange },
        ["@markup.link"] = { fg = theme.red },
        ["@markup.link.url"] = { fg = theme.orange, underline = true },
        ["@markup.link.label"] = { fg = theme.cyan },
        ["@markup.list"] = { fg = theme.red },
        ["@markup.quote"] = { bg = base30.black2 },

        ["@comment"] = { fg = base30.grey_fg },
        ["@comment.todo"] = { fg = base30.grey, bg = base30.white },
        ["@comment.warning"] = { fg = base30.black2, bg = theme.orange },
        ["@comment.note"] = { fg = base30.black2, bg = base30.white },
        ["@comment.danger"] = { fg = base30.black2, bg = base30.red },

        ["@diff.plus"] = { fg = base30.green },
        ["@diff.minus"] = { fg = base30.red },
        ["@diff.delta"] = { fg = base30.light_grey },

        --------------------------------- lsp ------------------------------

        ["@lsp.type.comment"] = { fg = base30.grey_fg },
        ["@lsp.type.enum"] = { fg = theme.yellow, sp = "none" },
        ["@lsp.type.enumMember"] = { fg = theme.red },
        ["@lsp.type.interface"] = { fg = theme.purple },
        ["@lsp.type.typeParameter"] = { fg = theme.yellow },
        ["@lsp.type.keyword"] = { fg = theme.purple },
        ["@lsp.type.namespace"] = { fg = theme.red },
        ["@lsp.type.parameter"] = { fg = theme.red },
        -- ["@lsp.type.property"] = { fg = theme.red },
        ["@lsp.type.variable"] = { fg = theme.white },
        ["@lsp.type.macro"] = { fg = theme.red },
        ["@lsp.type.method"] = { fg = theme.blue },
        ["@lsp.type.number"] = { fg = theme.orange },
        ["@lsp.type.generic"] = { fg = theme.white },
        ["@lsp.type.builtinType"] = { fg = theme.yellow },
        ["@lsp.typemod.method.defaultLibrary"] = { fg = theme.blue },
        ["@lsp.typemod.function.defaultLibrary"] = { fg = theme.blue },
        ["@lsp.typemod.operator.injected"] = { fg = theme.white },
        ["@lsp.typemod.string.injected"] = { fg = theme.green },
        ["@lsp.typemod.variable.defaultLibrary"] = { fg = theme.orange },
        ["@lsp.typemod.variable.injected"] = { fg = theme.white },
        ["@lsp.typemod.variable.static"] = { fg = theme.red },

        ["@lsp.type.class"] = { fg = theme.purple },
        ["@lsp.type.decorator"] = { fg = theme.blue },
        ["@lsp.type.function"] = { fg = theme.blue },
        ["@lsp.type.struct"] = { fg = theme.purple },
        ["@lsp.type.type"] = { fg = theme.yellow, sp = "none" },
        ["@event"] = { fg = theme.red },
        ["@modifier"] = { fg = theme.red },
        ["@regexp"] = { fg = theme.maroon },
      },
    },
  },

  {
    "LazyVim/LazyVim",
    opts = {
      colorscheme = "onedark",
    },
  },
}
